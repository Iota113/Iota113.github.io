:root {
  --scale: 0.7; /* Change this to test different spans */
}

.local {
  scale: var(--scale);
}

.masonry {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  grid-auto-rows: 10px;
  gap: 20px;
  max-width: 96%;
  margin-left: 2%;
  margin-right: 2%;
}

.mImg {
  background-color: #f7f7f6;
  padding: 5px;
  box-sizing: border-box;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
  border-radius: 0px;
  transition: transform 0.3s;
  align-items: center;
  justify-content: center;
  font-size: 1.2em;
  color: #fff;
  overflow: hidden;
}

.tall{
  grid-row: span calc(30 * var(--scale));
  grid-column: span calc(3 * var(--scale));
}

.narrowTall{
  grid-row: span calc(30 * var(--scale));
  grid-column: span calc(1.5 * var(--scale));
}

.narrowShort{
  grid-row: span calc(20 * var(--scale));
  grid-column: span calc(1.5 * var(--scale));
}

.wide{
  grid-row: span calc(20 * var(--scale));
  grid-column: span calc(4 * var(--scale));
}

.largeWide{
  grid-row: span calc(30 * var(--scale));
  grid-column: span calc(6 * var(--scale));
}

.smallSquare{
  grid-row: span calc(20 * var(--scale));
  grid-column: span calc(3 * var(--scale));
}

.evenSmallerSquare{
  grid-row: span calc(10 * var(--scale));
  grid-column: span calc(1.5 * var(--scale));
}

.largeSquare{
  grid-row: span calc(30 * var(--scale));
  grid-column: span calc(4 * var(--scale));
}

.mImg:hover {
  transform: translateY(-10px);
}

/* ChatGPT Generated Parameters */

@media (max-width: 768px) {
  /* For screens smaller than 768px */
  .masonry {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); /* Adjust grid columns */
    gap: 15px; /* Reduce gap for smaller screens */
  }

  .mImg {
    grid-row: span calc(15 * var(--scale)); /* Smaller rows on mobile */
    grid-column: span calc(2.5 * var(--scale)); /* Adjust column span */
  }

  .tall {
    grid-row: span calc(20 * var(--scale)); /* Adjust for mobile */
    grid-column: span calc(2 * var(--scale)); /* Adjust for mobile */
  }

  .narrowTall {
    grid-row: span calc(20 * var(--scale));
    grid-column: span calc(1.5 * var(--scale));
  }

  .wide {
    grid-row: span calc(15 * var(--scale)); /* Reduce size for mobile */
    grid-column: span calc(3 * var(--scale)); /* Adjust width */
  }

  .largeWide {
    grid-row: span calc(20 * var(--scale)); /* Smaller elements */
    grid-column: span calc(4 * var(--scale)); /* Adjust for mobile */
  }

  .smallSquare {
    grid-row: span calc(15 * var(--scale)); /* Reduce size */
    grid-column: span calc(2 * var(--scale)); /* Adjust for mobile */
  }

  .evenSmallerSquare {
    grid-row: span calc(8 * var(--scale)); /* Smaller items */
    grid-column: span calc(1.5 * var(--scale));
  }

  .largeSquare {
    grid-row: span calc(20 * var(--scale)); /* Adjust grid items */
    grid-column: span calc(3 * var(--scale));
  }
}

@media (max-width: 480px) {
  /* For very small screens like mobile phones */
  .masonry {
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); /* Smaller columns for small screens */
    gap: 10px; /* Even smaller gaps */
  }

  .mImg {
    grid-row: span calc(10 * var(--scale)); /* Further reduce the size */
    grid-column: span calc(2 * var(--scale));
  }

  /* Other elements can be adjusted similarly */
}

